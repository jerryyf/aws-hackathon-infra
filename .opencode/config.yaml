# OpenCode Configuration for AWS Hackathon Infrastructure
# Schema reference: https://opencode.ai/config.json
# Project: AWS CDK Infrastructure for Bedrock AgentCore Platform
# Status: Implementation phase with critical deployment blockers
# Last Updated: 2025-10-08

context:
  # Primary architecture reference
  architecture: "docs/arch.md"
  
  # Entity-relationship model
  data_model: "docs/er.md"
  
  # Project constitution and governance
  constitution: ".specify/memory/constitution.md"
  
  # Current feature specification
  current_spec: "specs/002-create-python-application"
  
  # Deployment readiness report
  blockers: "docs/deployment-readiness-analysis.md"

structure:
  # CDK application entry point
  app: "cdk/app.py"
  
  # Infrastructure stacks (Python modules)
  stacks:
    - "cdk/stacks/network_stack.py"      # VPC, ALB, WAF, VPC endpoints
    - "cdk/stacks/database_stack.py"     # Aurora PostgreSQL, RDS Proxy, OpenSearch
    - "cdk/stacks/storage_stack.py"      # S3 buckets, ECR repositories
    - "cdk/stacks/security_stack.py"     # Cognito, Secrets Manager, SSM
    - "cdk/stacks/monitoring_stack.py"   # CloudWatch, CloudTrail
    - "cdk/stacks/compute_stack.py"      # ECS Fargate (placeholder)
  
  # Test suites
  tests:
    contract: "tests/contract/"          # Contract tests (20 total, 2 failing)
    integration: "tests/integration/"    # Integration tests (not executed)
    unit: "tests/unit/"                  # Unit tests

commands:
  # Infrastructure validation
  synth: "cd cdk && npx aws-cdk synth --all"
  
  # Deploy all stacks
  deploy: "cd cdk && npx aws-cdk deploy --all"
  
  # Run contract tests
  test_contract: "pytest tests/contract/ -v"
  
  # Run single contract test
  test_single: "pytest {test_path}::{test_name}"
  
  # Run integration tests
  test_integration: "pytest tests/integration/ -v"
  
  # Python linting (when configured)
  lint: "ruff check cdk/"
  
  # Type checking (when configured)
  typecheck: "mypy cdk/"

deployment:
  status: "üî¥ NOT READY"
  readiness: "25%"
  region: "us-east-1"
  availability_zones:
    - "us-east-1a"
    - "us-east-1b"

critical_blockers:
  - id: "C1"
    severity: "CRITICAL"
    location: "cdk/app.py:20-25"
    issue: "Stack cross-references missing - stacks created without passing dependencies"
    fix: "Add network_stack=network_stack to DatabaseStack, ComputeStack, MonitoringStack constructors"
  
  - id: "C2"
    severity: "CRITICAL"
    location: "cdk/stacks/storage_stack.py:18,27,36"
    issue: "S3 bucket names hardcoded - will fail on deployment due to global naming conflict"
    fix: "Use auto-generated names with bucket_name=None or add account ID prefix"
  
  - id: "C3"
    severity: "CRITICAL"
    location: "cdk/stacks/storage_stack.py:19,28,37"
    issue: "S3 buckets use S3_MANAGED encryption instead of KMS (constitution violation)"
    fix: "Change to encryption=s3.BucketEncryption.KMS_MANAGED"
  
  - id: "C4"
    severity: "CRITICAL"
    location: "cdk/stacks/network_stack.py"
    issue: "Internal ALB required by FR-011 not implemented"
    fix: "Add internal ALB construct"
  
  - id: "C5"
    severity: "CRITICAL"
    location: "cdk/stacks/network_stack.py:103"
    issue: "Bedrock VPC endpoint uses invalid service name - will fail on deployment"
    fix: "Use proper InterfaceVpcEndpointAwsService or validate service name exists"
  
  - id: "C6"
    severity: "CRITICAL"
    location: "cdk/stacks/network_stack.py:69-78"
    issue: "WAF WebACL has no rules - FR-013 requires AWS Managed Rules"
    fix: "Add ManagedRuleGroupStatementProperty with AWSManagedRulesCommonRuleSet"
  
  - id: "C8"
    severity: "CRITICAL"
    location: "cdk/stacks/monitoring_stack.py:54"
    issue: "CloudTrail requires logs_bucket parameter but app.py doesn't pass it"
    fix: "Pass storage_stack.logs_bucket to MonitoringStack"
  
  - id: "C9"
    severity: "CRITICAL"
    location: ".gitignore"
    issue: "Infrastructure state files may leak AWS account metadata"
    fix: "Add cdk.out/, cdk.context.json to .gitignore"
  
  - id: "C10"
    severity: "CRITICAL"
    location: "cdk/stacks/network_stack.py:88-92"
    issue: "Shield Advanced Protection configured but requires costly subscription"
    fix: "Use Shield Standard (automatic) or remove CfnProtection"
  
  - id: "C11"
    severity: "CRITICAL"
    location: "cdk/stacks/network_stack.py"
    issue: "Missing Route 53 hosted zone (FR-039) and ACM certificate (FR-040)"
    fix: "Implement Route53 HostedZone and ACM Certificate resources"
  
  - id: "H2"
    severity: "HIGH"
    location: "cdk/stacks/storage_stack.py"
    issue: "ECR repository missing ImageTagMutability=IMMUTABLE (contract violation)"
    fix: "Add image_tag_mutability=ecr.TagMutability.IMMUTABLE to ECR repository"

constitution_principles:
  - "AWS Well-Architected Framework (6 pillars)"
  - "Infrastructure as Code Excellence (CDK preferred, version controlled, no manual changes)"
  - "Security & Compliance First (least privilege, encryption at rest/transit, audit trail)"
  - "Code Quality & Maintainability (type hints, 80% test coverage, code review)"
  - "Extensibility & Modularity (microservices, API-first, event-driven)"
  - "Observability & Operational Excellence (structured logging, X-Ray tracing, CloudWatch alarms)"

constitution_violations:
  - "S3 buckets use S3-managed keys instead of KMS (Constitution III)"
  - "No tagging strategy for cost management (Constitution - Cost Management)"
  - "No CI/CD pipeline with automated testing (Constitution - Development Standards)"
  - "Missing docstrings and type hints on __init__ methods (Constitution IV)"

network_architecture:
  vpc_cidr: "10.0.0.0/16"
  subnets:
    public: "10.0.0.0/24, 10.0.1.0/24"
    private_app: "10.0.10.0/24, 10.0.11.0/24"
    private_agent: "10.0.20.0/24, 10.0.21.0/24"
    private_data: "10.0.30.0/24, 10.0.31.0/24"
  
  services:
    - "S3 Gateway Endpoint"
    - "Interface Endpoints: EC2, ECS, ECR (api+dkr), Secrets Manager, Bedrock Runtime"
    - "Public ALB (internet-facing)"
    - "Internal ALB (NOT IMPLEMENTED)"
    - "WAF (no rules configured)"
    - "Shield Standard"

databases:
  aurora:
    engine: "PostgreSQL 15.5"
    multi_az: true
    api_status: "deprecated (using instanceProps)"
  
  opensearch:
    version: "2.11"
    nodes: 3
    multi_az: true
  
  rds_proxy:
    enabled: true

storage:
  s3_buckets:
    - "knowledge-base (hardcoded name, wrong encryption)"
    - "logs (hardcoded name, wrong encryption)"
    - "bedrock-data-automation (hardcoded name, wrong encryption)"
  
  ecr:
    repositories:
      - "hackathon/app (missing immutable tags)"
      - "hackathon/agent (missing immutable tags)"

security:
  cognito: "User Pool created, not integrated with ALB"
  secrets_manager: "Configured for DB credentials"
  ssm_parameter_store: "Configured"
  encryption: "ISSUE: S3 uses S3-managed keys, not KMS"

monitoring:
  cloudwatch: "Basic alarms with hardcoded references"
  cloudtrail: "Configured but missing logs bucket reference"
  x_ray: "Not implemented"

next_priorities:
  immediate:
    - "Fix C1-C11 and H2 (all CRITICAL blockers) - Est. 4-6 hours"
    - "Run contract tests and fix 2 failing tests"
    - "Validate CDK synthesis: npx aws-cdk synth --all"
    - "Add cdk.out/ and cdk.context.json to .gitignore"
  
  before_production:
    - "Implement CI/CD pipeline (.github/workflows/cdk-validate.yml)"
    - "Add tagging strategy (Project, Environment, Owner, CostCenter)"
    - "Update RDS to non-deprecated API (writer/readers pattern)"
    - "Document deployment procedures in README.md"
    - "Add environment parameterization (dev/staging/prod)"
  
  recommended:
    - "Add docstrings and type hints to all stack classes"
    - "Implement chaos engineering tests"
    - "Set up cost monitoring and budget alerts"
    - "Integrate Cognito with ALB authentication"

metrics:
  total_requirements: 49
  total_tasks: 48
  tasks_functional: 32
  implementation_quality: "65%"
  constitution_compliance: "60%"
  contract_tests_passing: "90% (18/20)"
  deployment_readiness: "25%"

spec_workflow:
  framework: ".specify"
  branch_pattern: "NNN-feature-name (3-digit prefix)"
  slash_commands:
    - "/constitution - Review project constitution"
    - "/spec - Create/update specification"
    - "/plan - Generate implementation plan"
    - "/tasks - Break down into tasks"
    - "/implement - Begin implementation"
    - "/analyze - Run deployment readiness analysis"
    - "/clarify - Get clarification on requirements"

notes: |
  ‚ö†Ô∏è DEPLOYMENT BLOCKER: This infrastructure CANNOT be deployed to AWS in its current state.
  
  All 48 tasks in tasks.md are marked complete, but only 65% of requirements are actually functional.
  
  MUST FIX BEFORE DEPLOYMENT:
  - 11 CRITICAL issues (C1-C11)
  - 1 HIGH-severity contract violation (H2)
  
  Estimated remediation time: 4-6 hours for CRITICAL issues, 12-18 hours for full production readiness.
  
  Contract tests failing:
  - test_ecr_repository_properties (missing ImageTagMutability)
  - test_rds_cluster_properties (deprecated API usage)
  
  Constitution violations:
  - S3 encryption (using S3-managed instead of KMS)
  - No tagging strategy
  - No CI/CD pipeline
  - Missing documentation
  
  Full analysis: docs/deployment-readiness-analysis.md
